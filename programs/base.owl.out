Module
  Function f1
    returnType: Type None
    Block
  
  Function f2
    returnType: Type None
    Variable z
      Type None
    Block
  
  Function f3
    returnType: Type None
    Variable x
      Type None
    Variable y
      Type I32
    Block
      Apply
        Name f1
      ;
      Apply
        Name f2
        Name x
      ;
      Apply
        Name f3
        Name x
        Name y
      ;
      Apply
        Member
          Name module
          Name f3
        Member
          Name mod
          Name x
        Name y
      ;
      Apply
        Name []
        Name arr
        Name x
      ;
      Apply
        Name []
        Name map
        Name x
        Name z
      ;
      Apply
        Name []
        Apply
          Apply
            Name f4
          Name x
        Constant 10
      ;
      Apply
        Name f2
        Name x
      ;
      Member
        Apply
          Name f2
        Name x
      ;
      Apply
        Name []
        Apply
          Name f2
        Constant 10
      ;
      Member
        Apply
          Name []
          Name a
          Name i
        Name y
      ;
      Member
        Member
          Apply
            Name []
            Name a
            Name i
          Name y
        Name z
      ;
  
  Function f4
    returnType: Type None
    Block
      Apply
        Name :
        Apply
          Name g
          Constant 10
          Constant 20
        Type I32
      ;
      Apply
        Name g
        Apply
          Name :
          Constant 10
          Type owl.lang.String
      ;
      Apply
        Name g
        Apply
          Name :
          Constant 50
          Type Array
            Type I32
      ;
  
  Function f5
    returnType: Type Fn
      Type I32
      Type Char
      Type Bool
    Block
      Apply
        Name :
        Constant 50
        Type Fn
          Type I32
          Type Bool
      ;
      Apply
        Name :
        Constant 12
        Type Generic
          Type I32
      ;
      Apply
        Name :
        Constant 13
        Type Generic
          Type I32
          Type String
          Type Bool
      ;
      Apply
        Name :
        Constant 14
        Type Generic
          Type Fn
            Type I32
            Type Bool
          Type Array
            Type String
          Type Fn
            Type Bool
            Type Array
              Type owl.lang.Char
      ;
      Apply
        Name :
        Constant 15
        Type Fn
          Type Array
            Type Array
              Type I32
          Type I64
          Type Bool
      ;
  
  Function f6
    returnType: Type None
    Block
      Apply
        Name f
        Apply
          Name ~
          Constant 10
      ;
      Apply
        Name f
        Apply
          Name ~
          Apply
            Name :
            Constant 10
            Type I32
      ;
      Apply
        Name f
        Apply
          Name -
          Constant 100
      ;
      Apply
        Name f
        Apply
          Name -
          Constant 100
        Apply
          Name !
          Apply
            Name :
            Name a
            Type I32
      ;
      Apply
        Name f
        Apply
          Name -
          Constant 100
        Apply
          Name !
          Apply
            Name :
            Name a
            Type I32
      ;
      Apply
        Name f
        Apply
          Name -
          Constant 100
        Apply
          Name :
          Apply
            Name !
            Name a
          Type I32
      ;
      Apply
        Name +
        Apply
          Name f
          Constant 10
      ;
      Apply
        Name +
        Apply
          Name :
          Apply
            Name f
            Constant 10
          Type I32
      ;
      Apply
        Name +
        Apply
          Name -
          Constant 3
        Apply
          Name +
          Constant 6
      ;
  
  Function f7
    returnType: Type None
    Block
      Apply
        Name /
        Apply
          Name *
          Constant 2
          Constant 3
        Constant 5
      ;
      Apply
        Name %
        Apply
          Name /
          Apply
            Name *
            Constant 2
            Constant 3
          Constant 5
        Constant 9
      ;
      Apply
        Name %
        Apply
          Name /
          Apply
            Name *
            Apply
              Name -
              Constant 2
            Apply
              Name +
              Constant 4
          Apply
            Name -
            Constant 5
        Apply
          Name +
          Constant 6
      ;
      Apply
        Name -
        Apply
          Name +
          Apply
            Name *
            Apply
              Name foo
              Constant 2
              Constant 3
            Apply
              Name -
              Constant 10
          Apply
            Name *
            Constant 80
            Apply
              Name +
              Constant 2
              Apply
                Name g
        Apply
          Name []
          Name a
          Constant 10
      ;
      Apply
        Name >>
        Apply
          Name >>>
          Apply
            Name <<
            Name a
            Constant 10
          Constant 8
        Constant 1
      ;
      Apply
        Name |
        Apply
          Name &
          Name a
          Apply
            Name <<
            Constant 1
            Constant 8
        Apply
          Name <<
          Constant 1
          Constant 6
      ;
      Apply
        Name |
        Apply
          Name &
          Name a
          Name b
        Apply
          Name &
          Apply
            Name +
            Constant 1
            Constant 6
          Constant 3
      ;
      Apply
        Name |
        Name a
        Apply
          Name ^
          Name b
          Apply
            Name &
            Name c
            Name d
      ;
  

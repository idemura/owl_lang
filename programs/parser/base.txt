--- STDOUT
Module
  Variable zzz
    Value STRING world
  
  Function f1
    returnType: None
    Block
    ;;
  
  Function f2
    returnType: None
    Argument x: I32
    Block
      Expr
        Apply
          Name print
          Value STRING hello
      ;
      Expr
        Apply
          Name print
          Value DEC 127
      ;
    ;;
  
  Function f3
    returnType: None
    Argument x: None
    Argument y: I32
    Block
      Expr
        Apply
          Name f1
      ;
      Expr
        Apply
          Name f2
          Name x
      ;
      Expr
        Apply
          Name f3
          Name x
          Name y
      ;
      Expr
        Apply
          Field f3
            Name modname
          Field x
            Name mod
          Name y
      ;
      Expr
        Apply
          Name []
          Name arr
          Name x
      ;
      Expr
        Apply
          Name []
          Name map
          Name x
          Name z
      ;
      Expr
        Apply
          Name []
          Apply
            Apply
              Name f4
            Name x
          Value DEC 10
      ;
      Expr
        Apply
          Name f2
          Name x
      ;
      Expr
        Field x
          Apply
            Name f2
      ;
      Expr
        Apply
          Name []
          Apply
            Name f2
          Value DEC 10
      ;
      Expr
        Field y
          Apply
            Name []
            Name a
            Name i
      ;
      Expr
        Field z
          Field y
            Apply
              Name []
              Name a
              Name i
      ;
    ;;
  
  Function f4
    returnType: None
    Block
      Expr
        Cast I32
          Apply
            Name g
            Value DEC 10
            Value DEC 20
      ;
      Expr
        Apply
          Name g
          Cast owl.lang.String
            Value DEC 10
      ;
      Expr
        Apply
          Name g
          Cast Array(I32)
            Value DEC 50
      ;
    ;;
  
  Function f5
    returnType: Fn(I32, Char, Bool)
    Block
      Expr
        Cast Fn(I32, Bool)
          Value DEC 50
      ;
      Expr
        Cast Generic(I32)
          Value DEC 12
      ;
      Expr
        Cast Generic(I32, String, Bool)
          Value DEC 13
      ;
      Expr
        Cast Generic(Fn(I32, Bool), Array(String), Fn(Bool, Array(owl.lang.Char)))
          Value DEC 14
      ;
      Expr
        Cast Fn(Array(Array(I32)), I64, Bool)
          Value DEC 15
      ;
    ;;
  
  Function f6
    returnType: None
    Block
      Expr
        Apply
          Name f
          Apply
            Name ~
            Value DEC 10
      ;
      Expr
        Apply
          Name f
          Apply
            Name ~
            Cast I32
              Value DEC 10
      ;
      Expr
        Apply
          Name f
          Apply
            Name -
            Value DEC 100
      ;
      Expr
        Apply
          Name f
          Apply
            Name -
            Value DEC 100
          Apply
            Name !
            Cast I32
              Name a
      ;
      Expr
        Apply
          Name f
          Apply
            Name -
            Value DEC 100
          Apply
            Name !
            Cast I32
              Name a
      ;
      Expr
        Apply
          Name f
          Apply
            Name -
            Value DEC 100
          Cast I32
            Apply
              Name !
              Name a
      ;
      Expr
        Apply
          Name +
          Apply
            Name f
            Value DEC 10
      ;
      Expr
        Apply
          Name +
          Cast I32
            Apply
              Name f
              Value DEC 10
      ;
      Expr
        Apply
          Name +
          Apply
            Name -
            Value DEC 3
          Apply
            Name +
            Value DEC 6
      ;
    ;;
  
  Function f7
    returnType: None
    Block
      Expr
        Apply
          Name /
          Apply
            Name *
            Value DEC 2
            Value DEC 3
          Value DEC 5
      ;
      Expr
        Apply
          Name %
          Apply
            Name /
            Apply
              Name *
              Value DEC 2
              Value DEC 3
            Value DEC 5
          Value DEC 9
      ;
      Expr
        Apply
          Name %
          Apply
            Name /
            Apply
              Name *
              Apply
                Name -
                Value DEC 2
              Apply
                Name +
                Value DEC 4
            Apply
              Name -
              Value DEC 5
          Apply
            Name +
            Value DEC 6
      ;
      Expr
        Apply
          Name -
          Apply
            Name +
            Apply
              Name *
              Apply
                Name foo
                Value DEC 2
                Value DEC 3
              Apply
                Name -
                Value DEC 10
            Apply
              Name *
              Value DEC 80
              Apply
                Name +
                Value DEC 2
                Apply
                  Name g
          Apply
            Name []
            Name a
            Value DEC 10
      ;
      Expr
        Apply
          Name >>
          Apply
            Name >>>
            Apply
              Name <<
              Name a
              Value DEC 10
            Value DEC 8
          Value DEC 1
      ;
      Expr
        Apply
          Name |
          Apply
            Name &
            Name a
            Apply
              Name <<
              Value DEC 1
              Value DEC 8
          Apply
            Name <<
            Value DEC 1
            Value DEC 6
      ;
      Expr
        Apply
          Name |
          Apply
            Name &
            Name a
            Name b
          Apply
            Name &
            Apply
              Name +
              Value DEC 1
              Value DEC 6
            Value DEC 3
      ;
      Expr
        Apply
          Name |
          Name a
          Apply
            Name ^
            Name b
            Apply
              Name &
              Name c
              Name d
      ;
    ;;
  
  Function f8
    returnType: None
    Block
      Expr
        Apply
          Name ==
          Apply
            Name >=
            Name a
            Name b
          Apply
            Name <
            Name c
            Name d
      ;
      Expr
        Apply
          Name <
          Apply
            Name <
            Name a
            Name b
          Name c
      ;
      Expr
        Apply
          Name ==
          Apply
            Name &
            Name a
            Value DEC 10
          Apply
            Name &
            Name b
            Apply
              Name <<
              Value DEC 1
              Value DEC 4
      ;
      Expr
        Apply
          Name is
          Apply
            Name ==
            Apply
              Name is
              Name a
              Value DEC 10
            Name b
          Value DEC 20
      ;
      Expr
        Apply
          Name !
          Apply
            Name ==
            Name a
            Value DEC 13
      ;
      Expr
        Apply
          Name !
          Apply
            Name is
            Name a
            Value DEC 13
      ;
      Expr
        Apply
          Name !
          Apply
            Name ==
            Name a
            Apply
              Name +
              Value DEC 12
              Value DEC 1
      ;
      Expr
        Apply
          Name ||
          Apply
            Name &&
            Apply
              Name &
              Name f
              Apply
                Name <<
                Value DEC 1
                Value DEC 8
            Apply
              Name !
              Apply
                Name <
                Apply
                  Name *
                  Value DEC 3
                  Name y
                Value DEC 7
          Apply
            Name !
            Apply
              Name ==
              Name b
              Name true
      ;
    ;;
  
  Function f9
    returnType: None
    Block
      Expr
        Assign 
          Name x
          Apply
            Name >>>
            Apply
              Name -
              Apply
                Name *
                Apply
                  Name width
                  Name window
                Apply
                  Name height
                  Name window
              Apply
                Name square
                Name r
                Value DEC 0
            Value DEC 2
      ;
      Expr
        Assign +
          Apply
            Name []
            Name a
            Name i
          Apply
            Name f
            Apply
              Name &&
              Name true
              Apply
                Name !
                Name b
      ;
    ;;
  
  Function f10
    returnType: None
    Block
      If
        Expr
          Apply
            Name &&
            Apply
              Name <
              Name a
              Name b
            Apply
              Name !
              Apply
                Name ==
                Apply
                  Name +
                  Apply
                    Name width
                    Name x
                  Value DEC 10
                Apply
                  Name height
                  Name x
        Block
          Expr
            Apply
              Name print
              Value DEC 10
          ;
        ;;
      ;
      If
        Expr
          Apply
            Name f
            Name r
            Apply
              Name &
              Name r
              Value DEC 5
        Block
          Expr
            Apply
              Name print
              Value DEC 10
          ;
        ;;
        Block
          Expr
            Apply
              Name print
              Value DEC 20
          ;
        ;;
      ;
      If
        Expr
          Apply
            Name &&
            Name true
            Name false
        Block
          Expr
            Apply
              Name print
              Value DEC 10
          ;
        ;;
        Expr
          Apply
            Name ==
            Apply
              Name +
              Name m
              Value DEC 10
            Value DEC 12
        Block
          Expr
            Apply
              Name print
              Value DEC 11
          ;
        ;;
        Expr
          Apply
            Name ==
            Apply
              Name -
              Name m
              Value DEC 10
            Value DEC 12
        Block
          Expr
            Apply
              Name print
              Value DEC 12
          ;
        ;;
      ;
      If
        Expr
          Apply
            Name &&
            Name true
            Name false
        Block
          Expr
            Apply
              Name print
              Value DEC 10
          ;
        ;;
        Expr
          Apply
            Name ==
            Apply
              Name +
              Name m
              Value DEC 10
            Value DEC 12
        Block
          Expr
            Apply
              Name print
              Value DEC 11
          ;
        ;;
        Expr
          Apply
            Name ==
            Apply
              Name -
              Name m
              Value DEC 10
            Value DEC 12
        Block
          Expr
            Apply
              Name print
              Value DEC 12
          ;
        ;;
        Block
          Expr
            Apply
              Name print
              Value DEC 13
          ;
        ;;
      ;
    ;;
  
  Function f12
    returnType: I32
    Argument x: None
    Argument y: I32
    Block
      Return
        Apply
          Name +
          Name x
          Name y
      ;
      Return
        Apply
          Name +
          Field numberInt
            Apply
              Name []
              Name a
              Name x
          Name y
      ;
      Return
      ;
    ;;
  
  Variable PI
    Value DEC 3
  
--- STDERR

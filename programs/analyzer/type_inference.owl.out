Module
  Function f1
    returnType: None
    Block
      Expr
        Apply
          Name println
          Literal STRING hello
      ;
    ;;
  
  Function f2
    returnType: None
    Argument a: I32
    Block
      Expr
        Apply
          Name println
          Apply
            Name +
            Name a
            Literal DEC 10
      ;
    ;;
  
  Function f2
    returnType: I32
    Argument x: String
    Block
    ;;
  
  Function qq
    returnType: None
    Block
      Expr
        Apply
          Name println
          Apply
            Name f2
            Literal STRING zzz
      ;
    ;;
  
  Function f3
    returnType: None
    Argument x: None
    Argument y: I32
    Block
      Expr
        Apply
          Name +
          Apply
            Name *
            Name x
            Name y
          Literal DEC 10
      ;
    ;;
  
  Function f4
    returnType: Array(I32)
    Block
    ;;
  
  Variable x
    Literal DEC 10
  
Function owl_test qq: Fn(None)
println
  Function <runtime> println: Fn(Bool, None)
  Function <runtime> println: Fn(Char, None)
  Function <runtime> println: Fn(I32, None)
  Function <runtime> println: Fn(I64, None)
  Function <runtime> println: Fn(F32, None)
  Function <runtime> println: Fn(F64, None)
  Function <runtime> println: Fn(String, None)
Variable owl_test x: None
Function <runtime> *: Fn(I32, I32, I32)
+
  Function <runtime> +: Fn(I32, I32, I32)
  Function <runtime> +: Fn(I64, I64, I64)
Function owl_test f1: Fn(None)
f2
  Function owl_test f2: Fn(I32, None)
  Function owl_test f2: Fn(String, I32)
Function owl_test f3: Fn(I32, I32, None)
Function owl_test f4: Fn(Array(I32))
